security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_CLIENT: ROLE_USER
        ROLE_ADMIN: ROLE_CLIENT
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN , ROLE_ALLOWED_TO_SWITCH , ROLE_CLIENT]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        api:
            pattern: ^/api
            stateless: true
            anonymous: ~
            form_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            logout:
                target: api/login
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
             pattern: ^/
            #  stateless: true
             user_checker: security.user_checker
             form_login:
                 provider: fos_userbundle
                 default_target_path: /admin
             anonymous: true
             logout:
                 path: /logout
                 target: /login
             guard:
                 authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
    #   - { path: ^/admin, roles: 'IS_AUTHENTICATED_FULLY' }
    #   - { path: ^/api , role: 'IS_AUTHENTICATED_FULLY' }
    #   - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }